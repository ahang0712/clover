{
  "facts": {
    "Read_Write_Analyzer": {
      "ISR_COUNT": 1,
      "GLOBAL_VAR": [
        "svp_simple_005_001_global_condition",
        "svp_simple_005_001_global_var"
      ],
      "shared_variables": [
        {
          "name": "svp_simple_005_001_global_var",
          "type": "i32",
          "accesses": [
            {
              "type": "write",
              "line": 17,
              "function": "svp_simple_005_001_main"
            },
            {
              "type": "write",
              "line": 23,
              "function": "svp_simple_005_001_main"
            },
            {
              "type": "write",
              "line": 25,
              "function": "svp_simple_005_001_main"
            },
            {
              "type": "read",
              "line": 31,
              "function": "svp_simple_005_001_isr_1"
            }
          ]
        },
        {
          "name": "svp_simple_005_001_global_condition",
          "type": "i32",
          "accesses": [
            {
              "type": "read",
              "line": 21,
              "function": "svp_simple_005_001_main"
            }
          ]
        }
      ],
      "variable_accesses": [
        {
          "variable": "svp_simple_005_001_global_var",
          "access_type": "write",
          "line": 17,
          "function": "svp_simple_005_001_main",
          "is_isr": false
        },
        {
          "variable": "svp_simple_005_001_global_condition",
          "access_type": "read",
          "line": 21,
          "function": "svp_simple_005_001_main",
          "is_isr": false
        },
        {
          "variable": "svp_simple_005_001_global_var",
          "access_type": "write",
          "line": 23,
          "function": "svp_simple_005_001_main",
          "is_isr": false
        },
        {
          "variable": "svp_simple_005_001_global_var",
          "access_type": "write",
          "line": 25,
          "function": "svp_simple_005_001_main",
          "is_isr": false
        },
        {
          "variable": "svp_simple_005_001_global_var",
          "access_type": "read",
          "line": 31,
          "function": "svp_simple_005_001_isr_1",
          "is_isr": true
        }
      ]
    },
    "Control_flow_Analyzer": {
      "status": "failed",
      "message": "工具执行失败或输出文件不存在，已创建默认输出。",
      "code": "1: \n2: #include \"../common.h\"\n3: \n4: #define MAX_LENGTH 10000\n5: #define TRIGGER 9999\n6: #define TRIGGER1 1000\n7: \n8: volatile int svp_simple_005_001_global_condition = 0;\n9: \n10: volatile int svp_simple_005_001_global_var;\n11: \n12: void svp_simple_005_001_main() {\n13: init();\n14: for (int i = 0; i < MAX_LENGTH; i++) {\n15: for (int j = 0; j < MAX_LENGTH; j++) {\n16: if ((i == TRIGGER) && (j == TRIGGER1))\n17: svp_simple_005_001_global_var = 0x01; // Write Operation on svp_simple_005_001_global_var.\n18: }\n19: }\n20: \n21: if (svp_simple_005_001_global_condition == 1){\n22: \n23: svp_simple_005_001_global_var = 0x09; // Write Operation on svp_simple_005_001_global_var.\n24: }\n25: svp_simple_005_001_global_var = 0x05; // Write Operation on svp_simple_005_001_global_var.\n26: }\n27: \n28: void svp_simple_005_001_isr_1() {\n29: idlerun();\n30: int reader;\n31: reader = svp_simple_005_001_global_var; // Read Operation on svp_simple_005_001_global_var.\n32: }",
      "variable_accesses": [],
      "shared_variables": [],
      "global_variables_to_detect": [],
      "defect_patterns": [],
      "defect_vars_by_pattern": {}
    },
    "Defect_Highlight": {
      "status": "failed",
      "message": "工具执行失败或输出文件不存在，已创建默认输出。",
      "code": "1: \n2: #include \"../common.h\"\n3: \n4: #define MAX_LENGTH 10000\n5: #define TRIGGER 9999\n6: #define TRIGGER1 1000\n7: \n8: volatile int svp_simple_005_001_global_condition = 0;\n9: \n10: volatile int svp_simple_005_001_global_var;\n11: \n12: void svp_simple_005_001_main() {\n13: init();\n14: for (int i = 0; i < MAX_LENGTH; i++) {\n15: for (int j = 0; j < MAX_LENGTH; j++) {\n16: if ((i == TRIGGER) && (j == TRIGGER1))\n17: svp_simple_005_001_global_var = 0x01; // Write Operation on svp_simple_005_001_global_var.\n18: }\n19: }\n20: \n21: if (svp_simple_005_001_global_condition == 1){\n22: \n23: svp_simple_005_001_global_var = 0x09; // Write Operation on svp_simple_005_001_global_var.\n24: }\n25: svp_simple_005_001_global_var = 0x05; // Write Operation on svp_simple_005_001_global_var.\n26: }\n27: \n28: void svp_simple_005_001_isr_1() {\n29: idlerun();\n30: int reader;\n31: reader = svp_simple_005_001_global_var; // Read Operation on svp_simple_005_001_global_var.\n32: }",
      "variable_accesses": [],
      "shared_variables": [],
      "global_variables_to_detect": [],
      "defect_patterns": [],
      "defect_vars_by_pattern": {}
    }
  },
  "used_tools": [
    "Read_Write_Analyzer",
    "Control_flow_Analyzer",
    "Defect_Highlight"
  ],
  "actual_used_tools": [
    "Read_Write_Analyzer",
    "Control_flow_Analyzer",
    "Defect_Highlight"
  ],
  "tool_sequence": [
    "Read_Write_Analyzer",
    "Control_flow_Analyzer",
    "Defect_Highlight"
  ],
  "expert_judge_plan": [],
  "tool_plan_output": "<tool>\nRead_Write_Analyzer\nControl_flow_Analyzer\nDefect_Highlight\n</tool>",
  "tool_plan_text": "<tool>\nRead_Write_Analyzer\nControl_flow_Analyzer\nDefect_Highlight\n</tool>",
  "expert_judge_json": "{\n  \"expert_judge_tasks\": []\n}"
}